import React, { useState } from 'react';
import api from '../api';

const InvoiceList = () => {
  const [invoices, setInvoices] = useState([]);

  const fetchInvoices = async () => {
    const response = await api.get('/invoices');
    setInvoices(response.data);
  };

  useEffect(() => {
    fetchInvoices();
  }, []);



const InvoiceForm = () => {
  const [formData, setFormData] = useState({
    customer_name: '',
    address: '',
    phone: '',
    date_issued: '',
    items: [{ description: '', qty: 1, price: 0 }]
  });


  const handleItemChange = (index, field, value) => {
    const updatedItems = [...formData.items];
    updatedItems[index][field] = value;
    setFormData({ ...formData, items: updatedItems });
  };

  const addItem = () => {
    setFormData({
      ...formData,
      items: [...formData.items, { description: '', qty: 1, price: 0 }]
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const response = await api.post('/invoice', formData);
    alert('Invoice created!');
    console.log(response.data);
  };

  return (
    <div>
      <div>
        <h2>Invoice Management Store (IMS)</h2>
      </div>
      <div>
        <form onSubmit={handleSubmit}>
          <input type="text" placeholder="Customer Name" value={formData.customer_name}
                onChange={e => setFormData({ ...formData, customer_name: e.target.value })} />
          <input type="text" placeholder="Address" value={formData.address}
                onChange={e => setFormData({ ...formData, address: e.target.value })} />
          <input type="text" placeholder="Phone" value={formData.phone}
                onChange={e => setFormData({ ...formData, phone: e.target.value })} />
          <input type="date" value={formData.date_issued}
                onChange={e => setFormData({ ...formData, date_issued: e.target.value })} />

          <h4>Items</h4>
          {formData.items.map((item, index) => (
            <div key={index}>
              <input type="text" placeholder="Description"
                    value={item.description}
                    onChange={e => handleItemChange(index, 'description', e.target.value)} />
              <input type="number" placeholder="Qty"
                    value={item.qty}
                    onChange={e => handleItemChange(index, 'qty', parseInt(e.target.value))} />
              <input type="number" placeholder="Price"
                    value={item.price}
                    onChange={e => handleItemChange(index, 'price', parseFloat(e.target.value))} />
            </div>
          ))}
          <button type="button" onClick={addItem}>+ Add Item</button>
          <button type="submit">Create Invoice</button>
        </form>
        <div style={{ marginTop: '2rem' }}>
          <h2>All Invoices</h2>
          <table className="table table-bordered table-striped">
            <thead>
              <tr>
                <th>Customer</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Date Issued</th>
                <th>Total</th>
                <th>Items</th>
              </tr>
            </thead>
            <tbody>
              {invoices.map((invoice) => (
                <tr key={invoice.id}>
                  <td>{invoice.customer_name}</td>
                  <td>{invoice.phone}</td>
                  <td>{invoice.address}</td>
                  <td>{invoice.date_issued}</td>
                  <td>${invoice.total}</td>
                  <td>
                    <ul style={{ paddingLeft: "1rem" }}>
                      {invoice.items.map((item, idx) => (
                        <li key={idx}>
                          {item.description}: ${item.amount}
                        </li>
                      ))}
                    </ul>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>

  );
};

export default InvoiceForm ;
// InvoiceList
